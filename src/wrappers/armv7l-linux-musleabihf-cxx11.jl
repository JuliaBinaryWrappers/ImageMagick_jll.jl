# Autogenerated wrapper script for ImageMagick_jll for armv7l-linux-musleabihf-cxx11
export identify, imagemagick_convert, libwand, mogrify, montage

using Ghostscript_jll
using Libtiff_jll
using OpenJpeg_jll
using JpegTurbo_jll
using Zlib_jll
using FFTW_jll
using libpng_jll
using libwebp_jll
using libzip_jll
using Bzip2_jll
using Zstd_jll
JLLWrappers.@generate_wrapper_header("ImageMagick")
JLLWrappers.@declare_library_product(libwand, "libMagickWand-7.Q16HDRI.so.10")
JLLWrappers.@declare_executable_product(identify)
JLLWrappers.@declare_executable_product(imagemagick_convert)
JLLWrappers.@declare_executable_product(mogrify)
JLLWrappers.@declare_executable_product(montage)
function __init__()
    JLLWrappers.@generate_init_header(Ghostscript_jll, Libtiff_jll, OpenJpeg_jll, JpegTurbo_jll, Zlib_jll, FFTW_jll, libpng_jll, libwebp_jll, libzip_jll, Bzip2_jll, Zstd_jll)
    JLLWrappers.@init_library_product(
        libwand,
        "lib/libMagickWand-7.Q16HDRI.so",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_executable_product(
        identify,
        "bin/identify",
    )

    JLLWrappers.@init_executable_product(
        imagemagick_convert,
        "bin/convert",
    )

    JLLWrappers.@init_executable_product(
        mogrify,
        "bin/mogrify",
    )

    JLLWrappers.@init_executable_product(
        montage,
        "bin/montage",
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
